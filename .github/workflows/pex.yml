name: FastAPI PEX 建構工作流程

on:
  push:
    branches:
      - main

env:
  PEX_OUTPUT: kijya-${{ matrix.os }}-py${{ matrix.python-version }}.pex

jobs:
  build_pex:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      # 取得程式碼
      - name: 取得程式碼
        uses: actions/checkout@v5

      # 設定 Python 環境
      - name: 設定 Python 環境
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # 升級 pip / 安裝 PEX
      - name: 升級 pip / 安裝 PEX
        run: |
          python -m pip install --upgrade pip
          pip install pex

      # 建構 PEX
      - name: 建構 PEX
        run: |
          python -m pex -r requirements.txt -D . -m app -o "${{ env.PEX_OUTPUT }}"

      # 上傳 build 產物
      - name: 上傳 build 產物
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PEX_OUTPUT }}
          path: ${{ env.PEX_OUTPUT }}

  release:
    runs-on: ubuntu-latest
    needs: build_pex
    steps:
      # 下載所有 build 產物
      - name: 下載所有 build 產物
        uses: actions/download-artifact@v4
        with:
          path: dist

      # 建立 Release 並上傳 PEX
      - name: 建立 Release 並上傳 PEX
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.event.head_commit.timestamp | format('YYYYMMDD') }}-${{ github.sha.substr(0,7) }}
          name: Release ${{ github.sha.substr(0,7) }}
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
